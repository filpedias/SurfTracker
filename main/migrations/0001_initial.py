# Generated by Django 4.1.3 on 2023-11-03 15:38

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Surfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('strava_user_id', models.CharField(max_length=90)),
                ('strava_code', models.CharField(max_length=90)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Surfers',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SurfSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=90, verbose_name='Name')),
                ('strava_activity_id', models.CharField(max_length=90, verbose_name='Strava Activity')),
                ('number_of_waves', models.IntegerField(default=0)),
                ('duration', models.TimeField(default=datetime.time(0, 0), verbose_name='Duration')),
                ('max_speed', models.DecimalField(decimal_places=1, default=0, max_digits=4, verbose_name='Speed (km/h)')),
                ('date', models.DateTimeField(null=True)),
                ('has_gpx_data', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SurfSpot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=90, verbose_name='Name')),
                ('latitude', models.DecimalField(decimal_places=16, max_digits=22, verbose_name='Latitude')),
                ('longitude', models.DecimalField(decimal_places=16, max_digits=22, verbose_name='Longitude')),
                ('short_name', models.CharField(default='', max_length=90, verbose_name='Image name')),
                ('is_saved', models.BooleanField(default=False, verbose_name='Saved')),
            ],
        ),
        migrations.CreateModel(
            name='Wave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.TimeField(default=datetime.time(0, 0), null=True, verbose_name='Duration')),
                ('max_speed', models.DecimalField(decimal_places=1, default=0, max_digits=4, null=True, verbose_name='Speed (km/h)')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.surfsession')),
            ],
        ),
        migrations.CreateModel(
            name='WaveConfigs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=90, verbose_name='Name')),
                ('min_speed_to_start_wave', models.DecimalField(decimal_places=1, default=8, max_digits=4, verbose_name='Speed To Trigger Wave Start')),
                ('min_speed_to_stop_wave', models.DecimalField(decimal_places=1, default=8, max_digits=4, verbose_name='Speed To Trigger Wave End')),
                ('minimum_time_of_event_to_consider_wave', models.DecimalField(decimal_places=1, default=2.5, max_digits=4, verbose_name='Seconds To Consider Wave')),
                ('min_max_speed_during_event_to_consider_wave', models.DecimalField(decimal_places=1, default=11, max_digits=4, verbose_name='Min. Max speed on wave')),
            ],
        ),
        migrations.CreateModel(
            name='WavePoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(decimal_places=16, max_digits=22, verbose_name='Latitude')),
                ('longitude', models.DecimalField(decimal_places=16, max_digits=22, verbose_name='Longitude')),
                ('time', models.DateTimeField(verbose_name='Time')),
                ('wave', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.wave')),
            ],
        ),
        migrations.AddField(
            model_name='surfsession',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.surfspot'),
        ),
        migrations.AddField(
            model_name='surfsession',
            name='surfer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
